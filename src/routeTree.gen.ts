/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as SignupImport } from "./routes/signup";
import { Route as ProjectsImport } from "./routes/projects";
import { Route as LoginImport } from "./routes/login";
import { Route as KanbanImport } from "./routes/kanban";
import { Route as IndexImport } from "./routes/index";

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: "/signup",
  path: "/signup",
  getParentRoute: () => rootRoute,
} as any);

const ProjectsRoute = ProjectsImport.update({
  id: "/projects",
  path: "/projects",
  getParentRoute: () => rootRoute,
} as any);

const LoginRoute = LoginImport.update({
  id: "/login",
  path: "/login",
  getParentRoute: () => rootRoute,
} as any);

const KanbanRoute = KanbanImport.update({
  id: "/kanban",
  path: "/kanban",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/kanban": {
      id: "/kanban";
      path: "/kanban";
      fullPath: "/kanban";
      preLoaderRoute: typeof KanbanImport;
      parentRoute: typeof rootRoute;
    };
    "/login": {
      id: "/login";
      path: "/login";
      fullPath: "/login";
      preLoaderRoute: typeof LoginImport;
      parentRoute: typeof rootRoute;
    };
    "/projects": {
      id: "/projects";
      path: "/projects";
      fullPath: "/projects";
      preLoaderRoute: typeof ProjectsImport;
      parentRoute: typeof rootRoute;
    };
    "/signup": {
      id: "/signup";
      path: "/signup";
      fullPath: "/signup";
      preLoaderRoute: typeof SignupImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/kanban": typeof KanbanRoute;
  "/login": typeof LoginRoute;
  "/projects": typeof ProjectsRoute;
  "/signup": typeof SignupRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/kanban": typeof KanbanRoute;
  "/login": typeof LoginRoute;
  "/projects": typeof ProjectsRoute;
  "/signup": typeof SignupRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/kanban": typeof KanbanRoute;
  "/login": typeof LoginRoute;
  "/projects": typeof ProjectsRoute;
  "/signup": typeof SignupRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/kanban" | "/login" | "/projects" | "/signup";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/kanban" | "/login" | "/projects" | "/signup";
  id: "__root__" | "/" | "/kanban" | "/login" | "/projects" | "/signup";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  KanbanRoute: typeof KanbanRoute;
  LoginRoute: typeof LoginRoute;
  ProjectsRoute: typeof ProjectsRoute;
  SignupRoute: typeof SignupRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  KanbanRoute: KanbanRoute,
  LoginRoute: LoginRoute,
  ProjectsRoute: ProjectsRoute,
  SignupRoute: SignupRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/kanban",
        "/login",
        "/projects",
        "/signup"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/kanban": {
      "filePath": "kanban.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/projects": {
      "filePath": "projects.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
